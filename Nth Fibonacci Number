Problem statement
The n-th term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -
    F(n) = F(n - 1) + F(n - 2), 
    Where, F(1) = 1, F(2) = 1
Provided 'n' you have to find out the n-th Fibonacci Number. Handle edges cases like when 'n' = 1 or 'n' = 2 by using conditionals like if else and return what's expected.
"Indexing is start from 1"


import java.util.*;
public class Solution {

	static int nthfibonacci(int n){
		if(n<=1){
		return n;
		}
		
		return nthfibonacci(n-1) + nthfibonacci(n-2);
	}
	public static void main(String[] args) {
		
		/* Your class should be named Solution.
	 	* Read input as specified in the question.
	 	* Print output as specified in the question.
		*/
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int result=nthfibonacci(n);
		System.out.println(result);
		
	}

}
